import 'dart:io';
import 'package:flutter/material.dart';
import 'package:file_picker/file_picker.dart';
import 'package:image_picker/image_picker.dart';
void main() {
  runApp(MyApp());
}
class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}
class _MyAppState extends State<MyApp> {
  final List<PlatformFile> _files = [];
  File? _imageFile;

  // 카메라에서 사진 찍기
  /*
  Future<void> takePhoto() async {
    final picker = ImagePicker();
    final pickedFile = await picker.pickImage(source: ImageSource.camera);

    if (pickedFile != null) {
      // 사진 찍기 완료
      setState(() {
        _imageFile = pickedFile;//File(pickedFile.path);
      });
    }
  }*/
  void takePhoto() {
    pickImage().then((File? file) {
      if (file != null) {
        setState(() {
          _imageFile = file;
        });
      }
    });
  }
  Future<File?> pickImage() async {
    final picker = ImagePicker();
    XFile? pickedFile = await picker.pickImage(source: ImageSource.camera);
    if (pickedFile == null) {
      return null;
    }
    return File(pickedFile.path);
  }


  // 갤러리에서 사진 선택
  /*
  Future<void> chooseGallery() async {
    final picker = ImagePicker();
    final pickedFile = await picker.pickImage(source: ImageSource.gallery);

    if (pickedFile != null) {
      // 갤러리에서 사진 선택 완료
      setState(() {
        _imageFile = pickedFile;//File(pickedFile.path);
      });
    }
  }*/

  void chooseGallery() {
    pickImage2().then((File? file) {
      if (file != null) {
        setState(() {
          _imageFile = file;
        });
      }
    });
  }
  Future<File?> pickImage2() async {
    final picker = ImagePicker();
    XFile? pickedFile = await picker.pickImage(source: ImageSource.gallery);
    if (pickedFile == null) {
      return null;
    }
    return File(pickedFile.path);
  }


  /*void _pickFiles() async {
    List<PlatformFile>? uploadedFiles = (await FilePicker.platform.pickFiles(
      allowMultiple: true,
    ))
        ?.files;
    setState(() {
      for (PlatformFile file in uploadedFiles!) {
        _files.add(file);
      }
    });
  }*/


  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: '학교 인증',
      home: Scaffold(
        appBar: AppBar(
          backgroundColor: Color(0xFF6ACA89),
          title: Text('학교 인증'),
          bottom: PreferredSize(
            preferredSize: Size.fromHeight(1),
            child: SizedBox(),
          ),
          leading: IconButton(
            icon: Icon(Icons.arrow_back),
            onPressed: () {
              //Navigator.pop(context);
            },
          ),
        ),
        body: Column(
          children: [
            Padding(
              padding: EdgeInsets.only(top: 16.0, left: 16.0, right: 16.0),
              child: Text(
                '학번 및 학생증 첨부',
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  color: Colors.black,
                ),
              ),
            ),
            Padding(
              padding: EdgeInsets.all(16.0),
              child: Text(
                '카드 또는 모바일 학생증을 스캔하거나 사진으로 찍어 첨부해주세요. 학생증이 아닌 포털 스크린샷 등을 첨부할 경우 인증이 되지 않습니다. ',
                style: TextStyle(
                  fontSize: 14,
                  fontWeight: FontWeight.normal,
                  color: Colors.black87,
                ),
              ),
            ),
            Padding(
              padding: EdgeInsets.only(left: 16.0, right: 16.0, bottom: 16.0),
              child: Text(
                '대학교 이름, 학번, 학과 정보를 제외한 정보는 가려주시기 바랍니다. ',
                style: TextStyle(
                  fontSize: 14,
                  fontWeight: FontWeight.normal,
                  color: Colors.redAccent,
                ),
              ),
            ),
            SizedBox(height: 5),
            Row(
              children: [
                Padding(
                  padding: EdgeInsets.only(left: 16.0, top: 18.0),
                  child: Expanded(
                    child: Stack(
                      children: const [
                        Image(
                          image: AssetImage('repo/images/card.png'),
                          height: 105,
                        ),
                        Positioned(
                          bottom: 0,
                          right: 2.0,
                          left: 2.0,
                          child: Icon(
                            Icons.task_alt,
                            color: Colors.blue,
                            size: 22.0,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
                Padding(
                  padding: EdgeInsets.only(left: 16.0, top: 18.0),
                  child: Expanded(
                    child: Stack(

                      children: [
                        Image(
                          image: AssetImage('repo/images/card.png'),
                          height: 105,
                        ),
                        Positioned(
                          bottom: 0,
                          right: 2.0,
                          left: 2.0,
                          child: Icon(
                            Icons.clear,
                            color: Colors.red,
                            size: 22.0,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
                Padding(
                  padding: EdgeInsets.only(left: 16.0, top: 18.0),
                  child: Expanded(
                    child: Stack(
                      children: [
                        Image(
                          image: AssetImage('repo/images/card.png'),
                          height: 105,
                        ),
                        Positioned(
                          bottom: 0,
                          right: 2.0,
                          left: 2.0,
                          child: Icon(
                            Icons.clear,
                            color: Colors.red,
                            size: 22.0,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Expanded(
                  child: Padding(
                    padding: EdgeInsets.only(left: 20.0),
                    child: Text('표준'),
                  ),
                ),
                Expanded(
                  child: Padding(
                    padding: EdgeInsets.only(left: 20.0),
                    child: Text('사진이 흐릿함'),
                  ),
                ),
                Expanded(
                  child: Padding(
                    padding: EdgeInsets.only(left: 20.0),
                    child: Text('빛 반사'),
                  ),
                ),
              ],
            ),
            //학번 입력
            SizedBox(height: 40),
            Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFF6ACA89),
                    minimumSize: Size(100, 30),
                  ),
                  onPressed: takePhoto,
                  child: Text("사진 찍기"),
                ),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Color(0xFF6ACA89),
                    minimumSize: Size(100, 30),
                  ),
                  onPressed: chooseGallery,
                  child: Text("앨범에서 선택"),
                ),
                Container(
                  decoration: BoxDecoration(
                    border: Border.all(
                      width: 1,
                    ),
                  ),
                  width: 350,
                  height: 40,
                  child: ListView.builder(
                    itemCount: _files.isEmpty ? 1 : _files.length,
                    itemBuilder: (BuildContext context, int index) {
                      return _files.isEmpty
                          ? const ListTile(
                          title:
                          Text(""))
                          : ListTile(
                        title: Text(_files
                            .elementAt(index)
                            .name),
                        trailing: IconButton(
                          icon: const Icon(Icons.delete),
                          onPressed: () {
                            setState(() {
                              _files.removeAt(index);
                            });
                          },
                        ),
                      );
                    },
                  ),
                ),
              ],
            ),

            SizedBox(height: 5),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: Color(0xFF6ACA89),
                minimumSize: Size(100, 30),
              ),
              onPressed: () {},
              child: Text('학교인증'),
            ),
          ],
        ),
      ),
    );
  }
}
