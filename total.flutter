
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';


void main() => runApp(MyApp());
//const String _name = "KIMGAHYUN";

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: "GoogleMap",
      home: MyHomePage(),
    );
  }
}


//Main페이지
class MyHomePage extends StatelessWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Main Page"),
        backgroundColor: Color(0xFF6ACA89),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => GoogleMapPage()),
                );
              },
              child: Text("Google Map Page로 이동"),
              style: ElevatedButton.styleFrom(
                primary: Color(0xFF6ACA89),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // '설정' 페이지로 이동
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => Setting()),
                );
              },
              child: Text("설정으로 이동"),
              style: ElevatedButton.styleFrom(
                primary: Color(0xFF6ACA89),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // '학교 인증 페이지'로 이동
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => Setting()),
                );
              },
              child: Text("학교 인증 페이지로 이동"),
              style: ElevatedButton.styleFrom(
                primary: Color(0xFF6ACA89),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // '채팅'로 이동
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => FriendlychatApp()),
                );
              },
              child: Text("바로모임-채팅"),
              style: ElevatedButton.styleFrom(
                primary: Color(0xFF6ACA89),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // '채팅'로 이동
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => FriendlychatApp()),
                );
              },
              child: Text("같이타자-채팅"),
              style: ElevatedButton.styleFrom(
                primary: Color(0xFF6ACA89),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
//Google Map Page에서 유저들 정보
class PersonInfoWidget extends StatelessWidget {
  final String nickname;
  final int distance;
  final bool arrived;

  const PersonInfoWidget({required this.nickname, required this.distance, required this.arrived});

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 60,
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: [
          Icon(Icons.person),
          Text(nickname),
          Text('${distance.toStringAsFixed(0)}m'),
          ElevatedButton(
            onPressed: () {},
            child: Text('이동중', style: TextStyle(fontSize: 11)),
            style: ButtonStyle(
              fixedSize: MaterialStateProperty.all(Size(4, 25)),
              backgroundColor: MaterialStateProperty.all(Colors.blue),
              foregroundColor: MaterialStateProperty.all(Colors.white),
            ),
          ),
        ],
      ),
    );
  }
}

//설정
class Setting extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF6ACA89),
        title: Text('설정'),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ),
      body: ListView(
        children: [
          ListTile(
            title: Text('공지사항'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => NoticePage()),
              );
            },
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
          ListTile(
            title: Text('Q&A'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => QAPage()),
              );
            },
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
          ListTile(
            title: Text('알림설정'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => NotificationPage()),
              );
            },
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 20,
            endIndent: 20,
          ),
          ListTile(
            title: Text('커뮤니티 이용규칙'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => CommunityRulePage()),
              );
            },
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
          ListTile(
            title: Text('서비스 이용약관'),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => ServiceAgreementPage()),
              );
            },
          ),
        ],
      ),
    );
  }
}

//설정 -> 공지사항
class NoticePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('공지사항'),
        backgroundColor: Color(0xFF6ACA89),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ),
      body: Center(
        child: Text('공지사항 페이지'),
      ),
    );
  }
}

//설정 -> Q&A 페이지
class QAPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Q&A'),
        backgroundColor: Color(0xFF6ACA89),
      ),
      body: Center(
        child: Text('Q&A 페이지'),
      ),
    );
  }
}
class NotificationPage extends StatefulWidget {
  @override
  _NotificationPageState createState() => _NotificationPageState();
}


//설정 -> 알림설정
class _NotificationPageState extends State<NotificationPage> {
  bool _commentsSwitchValue = true; //댓글
  bool _popularSwitchValue = true; //인기글
  bool _chatSwitchValue = false; //채팅
  bool _scheduleBriefingSwitchValue = true;   //일정 브리핑

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('알림설정'),
        backgroundColor: Color(0xFF6ACA89),
      ),
      body: ListView(
        children: [
          ListTile(
            title: Text('댓글'),
            trailing: Switch(
              value: _commentsSwitchValue,
              onChanged: (value) {
                setState(() {
                  _commentsSwitchValue = value;
                });
              },
            ),
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
          ListTile(
            title: Text('인기글'),
            trailing: Switch(
              value: _popularSwitchValue,
              onChanged: (value) {
                setState(() {
                  _popularSwitchValue = value;
                });
              },
            ),
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
          ListTile(
            title: Text('채팅'),
            trailing: Switch(
              value: _chatSwitchValue,
              onChanged: (value) {
                setState(() {
                  _chatSwitchValue = value;
                });
              },
            ),
          ),
          Divider(
            color: Colors.grey[400],
            thickness: 2,
            indent: 10,
            endIndent: 10,
          ),

          ListTile(
            title: Text('일정 브리핑'),
            trailing: Switch(
              value: _scheduleBriefingSwitchValue,
              onChanged: (value) {
                setState(() {
                  _scheduleBriefingSwitchValue = value;
                });
              },
            ),
          ),
          Divider(
            color: Colors.grey[400],
            height: 1,
            thickness: 1,
            indent: 16,
            endIndent: 16,
          ),
        ],
      ),
    );
  }
}


//설정 -> 커뮤니티 이용규칙
class CommunityRulePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('커뮤니티 이용규칙'),
        backgroundColor: Color(0xFF6ACA89),
      ),
      body: Center(
        child: Text('커뮤니티 이용규칙 페이지'),
      ),
    );
  }
}
//설정 -> 서비스 이용약관
class ServiceAgreementPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('서비스 이용약관'),
        backgroundColor: Color(0xFF6ACA89),
      ),
      body: Center(
        child: Text('서비스 이용약관 페이지'),
      ),
    );
  }
}

//구글맵 + 유저 위치 정보
class GoogleMapPage extends StatelessWidget {
  List<PersonInfoWidget> people = [
    PersonInfoWidget(nickname: "AAA", distance: 50, arrived: true),
    PersonInfoWidget(nickname: "BBB", distance: 250, arrived: true),
    PersonInfoWidget(nickname: "CCC", distance: 150, arrived: true),
    PersonInfoWidget(nickname: "DDD", distance: 200, arrived: false),
    PersonInfoWidget(nickname: "EEE", distance: 100, arrived: false),
    PersonInfoWidget(nickname: "FFF", distance: 80, arrived: false),
    PersonInfoWidget(nickname: "GGG", distance: 300, arrived: false),
    PersonInfoWidget(nickname: "HHH", distance: 120, arrived: false),
  ];
  final Set<Marker> _markers = {}; //지도 위 마크 표시
  //const GoogleMapPage({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    // final screenHeight = MediaQuery.of(context).size.height;
    // final halfScreenHeight = screenHeight / 2.0;

    return Scaffold(
        appBar: AppBar(
          title: Text("현재 모임 상황"),
          backgroundColor: Color(0xFF6ACA89),
        ),
      body: Column(
          children: [
            SizedBox(height: 10),
            Container(
              height: 220,
              child: ListView.builder(
                itemCount: people.length,
                itemBuilder: (BuildContext context, int index) {
                  return PersonInfoWidget(
                    nickname: people[index].nickname,
                    distance: people[index].distance,
                    arrived: people[index].arrived,
                  );
                },
              ),
            ),
            /*
            PersonInfoWidget(nickname: "AAA", distance: 50, arrived: true,),
            PersonInfoWidget(nickname: "BBB", distance: 250, arrived: true,),
            PersonInfoWidget(nickname: "CCC", distance: 150, arrived: true,),
*/
            SizedBox(height: 25),

            Container(
              height: 400,
              child: GoogleMap(
                mapType: MapType.normal, // 지도 유형
                initialCameraPosition: CameraPosition(
                  target: LatLng(36.8340603, 127.1792514),
                  zoom: 17.5, // 지도 초기 줌 레벨
                ),
                markers: _markers,
                onMapCreated: (GoogleMapController controller) {
                  // 지도 컨트롤러
                },
              ),

            ),
          ],
        ),
    );
  }
}


const String _name = "Name";

class FriendlychatApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "FriendlychatApp",
      home: ChatScreen(),
    );
  }
}

class ChatScreen extends StatefulWidget {
  @override
  State createState() => ChatScreenState();
}

class ChatScreenState extends State<ChatScreen> {
  final List<ChatMessage> _messages = <ChatMessage>[];
  final TextEditingController _textController = new TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("택시 채팅"),
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            // 뒤로가기 버튼을 눌렀을 때 실행될 코드
          },
        ),
        backgroundColor: Color(0xFF6ACA89), // 색상 설정
      ),
      body: Column(
        children: <Widget>[
          SizedBox(height:10),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 10.0),
                  child: FloatingActionButton.extended(
                    onPressed: () {},
                    label: Container(
                      width: 60,
                      child: Text( '위치공유',
                        textAlign: TextAlign.center,
                        style: TextStyle(fontSize: 14),
                      ),
                    ),
                    backgroundColor: Color(0xFF6ACA89),
                    heroTag: null,
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 10.0),
                  child: FloatingActionButton.extended(
                    onPressed: (){},
                    label: Container(
                      width: 60,
                      child: Text( '정산하기',
                        textAlign: TextAlign.center,
                        style: TextStyle(fontSize: 14),
                      ),
                    ),
                    backgroundColor: Color(0xFF6ACA89),
                    heroTag: null,
                  ),
                ),
              ),
              Expanded(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 10.0),
                  child: FloatingActionButton.extended(
                    onPressed: () {},
                    label: Container(
                      width: 60,
                      child: Text( '모임일정',
                        textAlign: TextAlign.center,
                        style: TextStyle(fontSize: 14),
                      ),
                    ),
                    backgroundColor: Color(0xFF6ACA89),
                    heroTag: null,
                  ),
                ),
              ),
            ],
          ),
          Flexible(
            child: ListView.builder(
              padding: EdgeInsets.all(8.0),
              reverse: true,
              itemBuilder: (_, int index) => _messages[index],
              itemCount: _messages.length,
            ),
          ),
          Divider(height: 1.0),
          Container(
            decoration: BoxDecoration(
                color: Theme.of(context).cardColor
            ),
            child: _buildTextComposer(),
          ),
          SizedBox(height:10),
        ],
      ),
    );
  }

  Widget _buildTextComposer() {
    return IconTheme(
      data: IconThemeData(color: Colors.black),
      child: Container(
          margin: const EdgeInsets.symmetric(horizontal: 8.0),
          child: Row(
            children: <Widget>[
              Flexible(
                child: TextField(
                  controller: _textController,
                  onSubmitted: _handleSubmitted,
                  decoration: new InputDecoration.collapsed(
                      hintText: "Send a message"),
                ),
              ),
              Container(
                margin: const EdgeInsets.symmetric(horizontal: 4.0),
                child: IconButton(
                    icon: Icon(Icons.send),
                    onPressed: () => _handleSubmitted(_textController.text)),
              ),
            ],
          )
      ),
    );
  }

  void _handleSubmitted(String text) {
    _textController.clear();
    var message = ChatMessage(
      text: text,
    );
    setState(() {
      _messages.insert(0, message);
    });
  }

/*void _addInfoMessage() {
    var infoMessage = ChatMessage(
      text: "정산시작",
      icon: Icon(Icons.info),
    );

    setState(() {
      _messages.insert(0, infoMessage);
    });

  }*/



}

class ChatMessage extends StatelessWidget {
  ChatMessage({this.text, this.icon});
  final String? text;
  final Icon? icon;
  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.symmetric(vertical: 10.0),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Container(
            margin: const EdgeInsets.only(right: 16.0),
            child: CircleAvatar(child: Text(_name[0])),
          ),
          Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              if (icon!=null) icon!,
              Text(_name, style: Theme.of(context).textTheme.bodyText1),
              Container(
                margin: const EdgeInsets.only(top: 5.0),
                child: Text(text!),
              ),
            ],
          ),
        ],
      ),
    );
  }
}
